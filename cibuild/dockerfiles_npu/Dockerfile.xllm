FROM jd-train-cn-north-1-inner.jcr.service.jdcloud.com/9n-triton-dev:centos7.9.2009  

# 安装cmake
RUN wget https://9n-das-tools.s3-internal.cn-north-1.jdcloud-oss.com/9n-triton/ascend-llm/mindie/common/cmake-3.28.1-linux-x86_64.sh && \
    mkdir /usr/local/cmake  && \
    bash cmake-3.28.1-linux-x86_64.sh  --skip-license --prefix=/usr/local/cmake && \
    echo "export PATH=/usr/local/cmake/bin:/$PATH " >> /etc/bashrc  &&\
    echo "export LD_LIBRARY_PATH=/usr/local/cmake/lib:/$LD_LIBRARY_PATH " >> /etc/bashrc 
 




ENV PATH=/usr/local/cmake/bin:$PATH \
LD_LIBRARY_PATH=/usr/local/cmake/lib:/$LD_LIBRARY_PATH



RUN pip3 install -U pip && \
    pip3 install decorator  numpy==1.26.4 pandas sympy pyyaml pathlib2 grpcio grpcio-tools protobuf scipy \
    requests attrs wheel Pillow setuptools==57.4.0 matplotlib opencv-python pandas lxml pytest xdoctest   -i https://mirrors.jd.com/pypi/web/simple 

#torch.whl
#torch_npu
RUN pip install pip==24.0   -i https://mirrors.jd.com/pypi/web/simple  && \
    wget -O torch-2.1.0+cpu-cp310-cp310-linux_x86_64.whl https://9n-das-tools.s3-internal.cn-north-1.jdcloud-oss.com/9n-triton/ascend-llm/mindie/730poc/v1.0/torch/torch-2.1.0%2Bcpu-cp310-cp310-linux_x86_64.whl && \
    wget https://9n-das-tools.s3-internal.cn-north-1.jdcloud-oss.com/9n-triton/ascend-llm/mindie/1030poc/torch/torch_npu-2.1.0.post8-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl && \
    pip3 install torch-* --force-reinstall   -i https://mirrors.jd.com/pypi/web/simple  && \
    pip3 install torch_npu-2.1.0.post8-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl  --force-reinstall --no-deps -i https://mirrors.jd.com/pypi/web/simple  && \
    git config --global http.sslVerify false && \
    rm -rf /tmp/*  && \
    rm -rf /root/.cache/pip 
    
#apex包编译安装 
RUN wget https://9n-das-tools.s3-internal.cn-north-1.jdcloud-oss.com/9n-triton/ascend-llm/mindie/1030poc/torch/apex-0.1.dev20241101%2Bascend-cp310-cp310-linux_x86_64.whl && \
    ls && \
    pip3 install apex-0.1.dev20241101+ascend-cp310-cp310-linux_x86_64.whl  && \
    rm -rf /tmp/* 

RUN pip3 install torchvision==0.16.0 cffi pycocotools \
    easydict psutil absl-py kiwisolver cython cycler mpmath attr  -i  https://mirrors.jd.com/pypi/web/simple && \
    pip3 install loguru transformers==4.41.0 tiktoken transformers_stream_generator==0.0.4 einops \
    decorator attrs psutil absl-py cloudpickle ml-dtypes scipy tornado tiktoken loguru  einops sentencepiece accelerate  -i https://mirrors.jd.com/pypi/web/simple  && \
    rm -rf /tmp/* && \
    rm -rf /root/.cache/pip

RUN rm -f /usr/local/miniconda3/lib/libcurl.so.4

RUN export http_proxy=http://bamboo-proxy.jd.com:80 https_proxy=http://bamboo-proxy.jd.com:80 && \
    wget https://9n-das-tools.s3-internal.cn-north-1.jdcloud-oss.com/9n-triton/git-2.7.4.tar.gz && \
    tar -xvf git-2.7.4.tar.gz && \
    yum install -y libcurl-devel && \
    cd git-2.7.4 && \
    make -j128 prefix=/usr && \
    make install prefix=/usr && \
    cd .. && \
    rm -rf git-2.7.4 && \
    rm -rf git-2.7.4.tar.gz

RUN export http_proxy=http://bamboo-proxy.jd.com:80 https_proxy=http://bamboo-proxy.jd.com:80 && \
    wget https://9n-das-tools.s3.cn-north-1.jdcloud-oss.com/9n-triton/git-2.7.4.tar.gz && \
    tar -xvf git-2.7.4.tar.gz && \
    yum install -y libcurl-devel && \
    cd git-2.7.4 && \
    make -j128 prefix=/usr && \
    make install prefix=/usr && \
    cd .. && \
    rm -rf git-2.7.4 && \
    rm -rf git-2.7.4.tar.gz

# boost
RUN export http_proxy=http://bamboo-proxy.jd.com:80 https_proxy=http://bamboo-proxy.jd.com:80 && \
    wget https://boostorg.jfrog.io/artifactory/main/release/1.80.0/source/boost_1_80_0.tar.gz && \
    tar -xvf boost_1_80_0.tar.gz && \
    cp -r boost_1_80_0/boost /usr/include/boost && \
    rm -rf boost_1_80_0 && \
    rm -rf boost_1_80_0.tar.gz


RUN wget https://9n-das-tools.s3-internal.cn-north-1.jdcloud-oss.com/9n-triton/ascend-llm/mindie/1030poc/torch/libtorch_npu.tar.gz && \
    tar -zxvf libtorch_npu.tar.gz -C /usr/local/

RUN echo "source /usr/local/Ascend/ascend-toolkit/set_env.sh" >> /etc/bashrc 
RUN echo "source /usr/local/NNAL/nnal/atb/set_env.sh" >> /etc/bashrc 

# RUN yum install -y ccache ninja-build bison rust cargo perl-IPC-Cmd perl-ExtUtils-MakeMaker gmp-devel curl-devel

RUN pip install \
    torch>=2.1.0 \
    fastapi==0.115.6 \
    huggingface-hub==0.26.3 \
    shortuuid==1.0.13 \
    safetensors==0.4.5 \
    numpy==1.26.4 \
    uvicorn==0.32.1 \
    starlette==0.41.3 \
    pydantic==2.10.3 \
    typing-extensions==4.12.2 \
    filelock==3.16.1 \
    sympy==1.13.3 \
    networkx==3.4.2 \
    jinja2==3.1.4 \
    fsspec==2024.10.0 \
    packaging==23.0 \
    pyyaml==6.0.2 \
    requests==2.29.0 \
    tqdm==4.65.0 \
    click==8.1.7 \
    h11==0.14.0 \
    annotated-types==0.7.0 \
    pydantic-core==2.27.1 \
    anyio==4.7.0 \
    MarkupSafe==3.0.2 \
    charset-normalizer==2.0.4 \
    idna==3.4 \
    urllib3==1.26.16 \
    certifi==2023.5.7 \
    mpmath==1.3.0 \
    exceptiongroup==1.2.2 \
    sniffio==1.3.1 \
    aiohttp==3.10.11  \
    openai==1.57.1  \
    transformers==4.43.1 \
    pillow==11.0.0 \
    -i "https://mirrors.jd.com/pypi/web/simple"
